{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/form-components/ChangeColor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"cyan\", \"magenta\", \"white\"];\nexport function ChangeColor() {\n  _s();\n\n  const [color, setColor] = useState(\"\");\n\n  function updateColor(event) {\n    setColor(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [COLORS.map(colorValue => /*#__PURE__*/_jsxDEV(Form.Check, {\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"radio\",\n        name: \"colors\",\n        onChange: updateColor,\n        id: \"color-check\" + colorValue,\n        label: color,\n        value: colorValue,\n        checked: color === colorValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, colorValue, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"You have chosen \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-testid\": \"colored-box\",\n        children: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeColor, \"Q4bR0JdmsMD94TU+JW6ZMkPc9Fo=\");\n\n_c = ChangeColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeColor\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/form-components/ChangeColor.tsx"],"names":["React","useState","Form","COLORS","ChangeColor","color","setColor","updateColor","event","target","value","map","colorValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,MAAMC,MAAM,GAAG,CACX,KADW,EAEX,MAFW,EAGX,OAHW,EAIX,QAJW,EAKX,QALW,EAMX,MANW,EAOX,SAPW,EAQX,OARW,CAAf;AAWA,OAAO,SAASC,WAAT,GAAoC;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAS,EAAT,CAAlC;;AACA,WAASM,WAAT,CAAqBC,KAArB,EAAiE;AAC7DF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH;;AACD,sBACI;AAAA,eACKP,MAAM,CAACQ,GAAP,CAAYC,UAAD,iBACR,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,QAAQ,EAAEL,WAHd;AAII,QAAA,EAAE,EAAE,gBAAgBK,UAJxB;AAKI,QAAA,KAAK,EAAEP,KALX;AAMI,QAAA,KAAK,EAAEO,UANX;AAOI,QAAA,OAAO,EAAEP,KAAK,KAAKO;AAPvB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAiBA,UAAjB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAcI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,uBAAY,aAAlB;AAAA,kBAAiCP;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA1BeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nconst COLORS = [\n    \"red\",\n    \"blue\",\n    \"green\",\n    \"orange\",\n    \"purple\",\n    \"cyan\",\n    \"magenta\",\n    \"white\"\n];\n\nexport function ChangeColor(): JSX.Element {\n    const [color, setColor] = useState<string>(\"\");\n    function updateColor(event: React.ChangeEvent<HTMLInputElement>) {\n        setColor(event.target.value);\n    }\n    return (\n        <div>\n            {COLORS.map((colorValue: string) => (\n                <Form.Check key={colorValue}>\n                    <Form.Check\n                        type=\"radio\"\n                        name=\"colors\"\n                        onChange={updateColor}\n                        id={\"color-check\" + colorValue}\n                        label={color}\n                        value={colorValue}\n                        checked={color === colorValue}\n                    />\n                </Form.Check>\n            ))}\n            <p>\n                <span>You have chosen </span>\n                <span data-testid=\"colored-box\">{color}</span>;\n            </p>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}