{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/components/RevealAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RevealAnswer() {\n  _s();\n\n  const [value, setValue] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setValue(value === false ? true : false),\n      children: \"Reveal Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), value === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"42\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RevealAnswer, \"HfkdrTZbv6ig6ZNY/1nxKCooDOU=\");\n\n_c = RevealAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevealAnswer\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/components/RevealAnswer.tsx"],"names":["React","useState","Button","RevealAnswer","value","setValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAU,KAAV,CAAlC;AACA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAACD,KAAK,KAAK,KAAV,GAAkB,IAAlB,GAAyB,KAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKA,KAAK,KAAK,IAAV,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,gBAAmC;AAAA;AAAA;AAAA;AAAA,YAJxC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAVeD,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport function RevealAnswer(): JSX.Element {\n    const [value, setValue] = useState<boolean>(false);\n    return (\n        <div>\n            <Button onClick={() => setValue(value === false ? true : false)}>\n                Reveal Answer\n            </Button>\n            {value === true ? <span>42</span> : <span></span>}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}