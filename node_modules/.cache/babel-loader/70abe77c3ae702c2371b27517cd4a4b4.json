{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/form-components/EditMode.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditMode() {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [isStudent, setIsStudent] = useState(true);\n  const [name, setName] = useState(\"\");\n\n  function updateMode(event) {\n    setEditMode(event.target.checked);\n  }\n\n  function updateStudent(event) {\n    setIsStudent(event.target.checked);\n  }\n\n  function updateName(event) {\n    setName(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"switch\",\n      id: \"edit-mode-check\",\n      label: \"Edit Mode?\",\n      checked: editMode,\n      onChange: updateMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"checkbox\",\n      id: \"student-check\",\n      label: \"Student?\",\n      checked: isStudent,\n      onChange: updateStudent,\n      hidden: !editMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: name,\n        onChange: updateName,\n        hidden: !editMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isStudent && name != \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [name, \" is a student\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : !isStudent && name != \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [name, \" is not a student\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this) : isStudent && name == \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Your name is a student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Your name is not a student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditMode, \"/VoRXENBY05TgNdapRuG/G2jxbE=\");\n\n_c = EditMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMode\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/form-components/EditMode.tsx"],"names":["React","useState","Form","EditMode","editMode","setEditMode","isStudent","setIsStudent","name","setName","updateMode","event","target","checked","updateStudent","updateName","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,QAAT,GAAiC;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAU,IAAV,CAA1C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAS,EAAT,CAAhC;;AACA,WAASS,UAAT,CAAoBC,KAApB,EAAgE;AAC5DN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAX;AACH;;AACD,WAASC,aAAT,CAAuBH,KAAvB,EAAmE;AAC/DJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,OAAd,CAAZ;AACH;;AACD,WAASE,UAAT,CAAoBJ,KAApB,EAAgE;AAC5DF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaI,KAAd,CAAP;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,iBAFP;AAGI,MAAA,KAAK,EAAC,YAHV;AAII,MAAA,OAAO,EAAEZ,QAJb;AAKI,MAAA,QAAQ,EAAEM;AALd;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,IAAD,CAAM,KAAN;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,EAAE,EAAC,eAFP;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,OAAO,EAAEJ,SAJb;AAKI,MAAA,QAAQ,EAAEQ,aALd;AAMI,MAAA,MAAM,EAAE,CAACV;AANb;AAAA;AAAA;AAAA;AAAA,YARJ,eAgBI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,KAAK,EAAEI,IADX;AAEI,QAAA,QAAQ,EAAEO,UAFd;AAGI,QAAA,MAAM,EAAE,CAACX;AAHb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAwBI;AAAA,gBACKE,SAAS,IAAIE,IAAI,IAAI,EAArB,gBACG;AAAA,mBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAEG,CAACF,SAAD,IAAcE,IAAI,IAAI,EAAtB,gBACA;AAAA,mBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,GAEAF,SAAS,IAAIE,IAAI,IAAI,EAArB,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAnDeL,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function EditMode(): JSX.Element {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [isStudent, setIsStudent] = useState<boolean>(true);\n    const [name, setName] = useState<string>(\"\");\n    function updateMode(event: React.ChangeEvent<HTMLInputElement>) {\n        setEditMode(event.target.checked);\n    }\n    function updateStudent(event: React.ChangeEvent<HTMLInputElement>) {\n        setIsStudent(event.target.checked);\n    }\n    function updateName(event: React.ChangeEvent<HTMLInputElement>) {\n        setName(event.target.value);\n    }\n    return (\n        <div>\n            <Form.Check\n                type=\"switch\"\n                id=\"edit-mode-check\"\n                label=\"Edit Mode?\"\n                checked={editMode}\n                onChange={updateMode}\n            />\n            <Form.Check\n                type=\"checkbox\"\n                id=\"student-check\"\n                label=\"Student?\"\n                checked={isStudent}\n                onChange={updateStudent}\n                hidden={!editMode}\n            />\n            <Form.Group controlId=\"formName\">\n                <Form.Label>Name:</Form.Label>\n                <Form.Control\n                    value={name}\n                    onChange={updateName}\n                    hidden={!editMode}\n                />\n            </Form.Group>\n            <h3>\n                {isStudent && name != \"\" ? (\n                    <span>{name} is a student</span>\n                ) : !isStudent && name != \"\" ? (\n                    <span>{name} is not a student</span>\n                ) : isStudent && name == \"\" ? (\n                    <span>Your name is a student</span>\n                ) : (\n                    <span>Your name is not a student</span>\n                )}\n            </h3>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}