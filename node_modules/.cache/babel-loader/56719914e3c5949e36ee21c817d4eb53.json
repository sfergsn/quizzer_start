{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/form-components/MultipleChoiceQuestion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MultipleChoiceQuestion(_ref) {\n  _s();\n\n  let {\n    options,\n    expectedAnswer\n  } = _ref;\n  const [choice, setChoice] = useState(options[0]);\n\n  function updateChoice(event) {\n    setChoice(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"QuestionOptions\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Select an answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: choice,\n        onChange: updateChoice,\n        children: options.map(answer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: answer,\n          children: answer\n        }, answer, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: choice === expectedAnswer ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2714\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleChoiceQuestion, \"lGdQouEPRWvB7quGyRYflZ6hRP8=\");\n\n_c = MultipleChoiceQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/form-components/MultipleChoiceQuestion.tsx"],"names":["React","useState","Form","MultipleChoiceQuestion","options","expectedAnswer","choice","setChoice","updateChoice","event","target","value","map","answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,sBAAT,OAMS;AAAA;;AAAA,MANuB;AACnCC,IAAAA,OADmC;AAEnCC,IAAAA;AAFmC,GAMvB;AACZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAASG,OAAO,CAAC,CAAD,CAAhB,CAApC;;AACA,WAASI,YAAT,CAAsBC,KAAtB,EAAmE;AAC/DF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAEL,MAApB;AAA4B,QAAA,QAAQ,EAAEE,YAAtC;AAAA,kBACKJ,OAAO,CAACQ,GAAR,CAAaC,MAAD,iBACT;AAAqB,UAAA,KAAK,EAAEA,MAA5B;AAAA,oBACKA;AADL,WAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA,gBACKP,MAAM,KAAKD,cAAX,gBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADnD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA5BeF,sB;;KAAAA,sB","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function MultipleChoiceQuestion({\n    options,\n    expectedAnswer\n}: {\n    options: string[];\n    expectedAnswer: string;\n}): JSX.Element {\n    const [choice, setChoice] = useState<string>(options[0]);\n    function updateChoice(event: React.ChangeEvent<HTMLSelectElement>) {\n        setChoice(event.target.value);\n    }\n    return (\n        <div>\n            <Form.Group controlId=\"QuestionOptions\">\n                <Form.Label>Select an answer:</Form.Label>\n                <Form.Select value={choice} onChange={updateChoice}>\n                    {options.map((answer: string) => (\n                        <option key={answer} value={answer}>\n                            {answer}\n                        </option>\n                    ))}\n                </Form.Select>\n            </Form.Group>\n            <h3>\n                {choice === expectedAnswer ? <span>✔️</span> : <span>❌</span>}\n            </h3>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}