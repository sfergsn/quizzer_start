{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/form-components/GiveAttempts.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GiveAttempts() {\n  _s();\n\n  const [AttemptsLeft, setAttemptsLeft] = useState(3);\n  const [AttemptsReq, setAttemptsReq] = useState(\"\");\n  let AttemptsReqNum = parseInt(AttemptsReq) || 0;\n\n  function updateAttemptsReq(event) {\n    setAttemptsReq(event.target.value);\n    AttemptsReqNum = parseInt(AttemptsReq) || 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formAttemptReq\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Attempt Request: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        value: AttemptsReq,\n        onChange: updateAttemptsReq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setAttemptsLeft(AttemptsLeft - 1),\n      disabled: AttemptsLeft === 0,\n      children: \"Use\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setAttemptsLeft(AttemptsLeft + AttemptsReqNum),\n      children: \"Gain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: AttemptsLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GiveAttempts, \"rtar0wjkBvgOG3arH5UeXinvmGE=\");\n\n_c = GiveAttempts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GiveAttempts\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/form-components/GiveAttempts.tsx"],"names":["React","useState","Button","Form","GiveAttempts","AttemptsLeft","setAttemptsLeft","AttemptsReq","setAttemptsReq","AttemptsReqNum","parseInt","updateAttemptsReq","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;AAEA,OAAO,SAASC,YAAT,GAAqC;AAAA;;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAS,CAAT,CAAhD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAS,EAAT,CAA9C;AACA,MAAIQ,cAAc,GAAGC,QAAQ,CAACH,WAAD,CAAR,IAAyB,CAA9C;;AAEA,WAASI,iBAAT,CAA2BC,KAA3B,EAAuE;AACnEJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAL,IAAAA,cAAc,GAAGC,QAAQ,CAACH,WAAD,CAAR,IAAyB,CAA1C;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAEA,WAFX;AAGI,QAAA,QAAQ,EAAEI;AAHd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAML,eAAe,CAACD,YAAY,GAAG,CAAhB,CADlC;AAEI,MAAA,QAAQ,EAAEA,YAAY,KAAK,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAeI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAMC,eAAe,CAACD,YAAY,GAAGI,cAAhB,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAoBI;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAlCeD,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport function GiveAttempts(): JSX.Element {\n    const [AttemptsLeft, setAttemptsLeft] = useState<number>(3);\n    const [AttemptsReq, setAttemptsReq] = useState<string>(\"\");\n    let AttemptsReqNum = parseInt(AttemptsReq) || 0;\n\n    function updateAttemptsReq(event: React.ChangeEvent<HTMLInputElement>) {\n        setAttemptsReq(event.target.value);\n        AttemptsReqNum = parseInt(AttemptsReq) || 0;\n    }\n\n    return (\n        <div>\n            <Form.Group controlId=\"formAttemptReq\">\n                <Form.Label>Attempt Request: </Form.Label>\n                <Form.Control\n                    type=\"number\"\n                    value={AttemptsReq}\n                    onChange={updateAttemptsReq}\n                />\n            </Form.Group>\n            <Button\n                onClick={() => setAttemptsLeft(AttemptsLeft - 1)}\n                disabled={AttemptsLeft === 0}\n            >\n                Use\n            </Button>\n            <Button\n                onClick={() => setAttemptsLeft(AttemptsLeft + AttemptsReqNum)}\n            >\n                Gain\n            </Button>\n            <h3>{AttemptsLeft}</h3>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}