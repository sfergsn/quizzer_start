{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/quizzer_start/src/quizzer/QuestionEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./QuestionEdit.css\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuestionEdit = _ref => {\n  _s();\n\n  let {\n    index,\n    lastIndex,\n    question,\n    editQuestion,\n    removeQuestion,\n    swapQuestion\n  } = _ref;\n  const [a, b] = useState(question.options.findIndex(s => question.expected === s));\n\n  const handleNumOptions = e => {\n    b(0);\n    const newNum = parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\n    editQuestion(question.id, { ...question,\n      type: \"multiple_choice_question\",\n      expected: \"Example Answer\",\n      options: Array(newNum).fill(\"Example Answer\")\n    });\n  };\n  /*const switchMulti = () => {\n      b(0);\n      editQuestion(question.id, {\n          ...question,\n          type: \"multiple_choice_question\",\n          expected: \"Example Answer\",\n          options: Array(3).fill(\"Example Answer\")\n      });\n  };*/\n\n\n  const handlePoints = e => {\n    question.points = parseInt(e.target.value);\n    editQuestion(question.id, question);\n  };\n\n  const handleChoiceChange = (e, i) => {\n    const newOptions = [...question.options];\n    newOptions.splice(i, 1, e.target.value);\n    editQuestion(question.id, { ...question,\n      options: newOptions,\n      expected: a === i ? e.target.value : question.expected\n    });\n  };\n\n  const handleRadioChange = e => {\n    const idx = parseInt(e.target.value);\n    b(idx);\n    editQuestion(question.id, { ...question,\n      expected: question.options[idx]\n    });\n  };\n\n  function handleSwitch(event) {\n    throw new Error(\"Function not implemented.\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit_question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_title_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_title_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [index + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"title_input\",\n            controlId: \"editTitleFormId\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: question.body,\n              \"data-testid\": \"edit_question_title\",\n              onChange: e => {\n                editQuestion(question.id, { ...question,\n                  body: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_title_box\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"points_input\",\n            controlId: \"editPointsFormId\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: question.points,\n              type: \"number\",\n              onChange: handlePoints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"pt\", question.points !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_answer_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type_form\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"questionTypeFormId\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Type: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                className: \"type_dropdown\",\n                value: question.type,\n                onChange: handleSwitch,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"data-testid\": \"question_type_dropdown_\" + index,\n                  value: \"multiple_choice_question\",\n                  children: \"Multiple Choice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  \"data-testid\": \"question_type_dropdown_\" + index,\n                  value: \"short_answer_question\",\n                  children: \"Short Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"editNumChoicesId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Choices: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"num_choices\",\n                  value: question.options.length,\n                  type: \"number\",\n                  onChange: handleNumOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [question.type === \"short_answer_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEditShortExpectedBox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: question.expected,\n                onChange: e => {\n                  editQuestion(question.id, { ...question,\n                    expected: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEditMultipleExpectedBox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"radio_question_box\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  name: \"questionChoice\" + index,\n                  value: i,\n                  checked: a === i,\n                  onChange: handleRadioChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"questionChoice\" + index,\n                  value: option,\n                  onChange: e => {\n                    handleChoiceChange(e, i);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 49\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap_button_container\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: index === 0,\n            className: \"swap_button\",\n            onClick: () => {\n              swapQuestion(index, index - 1);\n            },\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: index === lastIndex,\n            className: \"swap_button\",\n            onClick: () => {\n              swapQuestion(index, index + 1);\n            },\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_question_footer\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          className: \"published_question_check\",\n          \"data-testid\": \"question_published_check\",\n          type: \"checkbox\",\n          id: \"is_question_published_check\",\n          label: \"Published\",\n          checked: question.published,\n          onChange: e => {\n            editQuestion(question.id, { ...question,\n              published: e.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            removeQuestion(question.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuestionEdit, \"UUjBrgS9l6kLlI1/YIgmu+INyxc=\");\n\n_c = QuestionEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionEdit\");","map":{"version":3,"sources":["/Users/sferg/quizzer_start/src/quizzer/QuestionEdit.tsx"],"names":["React","useState","Button","Form","QuestionEdit","index","lastIndex","question","editQuestion","removeQuestion","swapQuestion","a","b","options","findIndex","s","expected","handleNumOptions","e","newNum","parseInt","target","value","id","type","Array","fill","handlePoints","points","handleChoiceChange","i","newOptions","splice","handleRadioChange","idx","handleSwitch","event","Error","body","length","map","option","published","checked"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\nimport { Question /*QuestionType*/ } from \"../interfaces/question\";\n\nimport \"./QuestionEdit.css\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport { Form } from \"react-bootstrap\";\n\nexport const QuestionEdit = ({\n    index,\n    lastIndex,\n    question,\n    editQuestion,\n    removeQuestion,\n    swapQuestion\n}: {index: number, lastIndex: number, question: Question,\n    editQuestion: (index: number, question: Question) => void, \n    removeQuestion: (index: number) => void, \n    swapQuestion: (index: number, lastIndex: number) => void\n}) => {\n    const [a, b] = useState<number>(\n        question.options.findIndex((s: string) => question.expected === s)\n    );\n\n    const handleNumOptions = (e: React.ChangeEvent<HTMLInputElement>) => {\n        b(0);\n        const newNum =\n            parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\n        editQuestion(question.id, {\n            ...question,\n            type: \"multiple_choice_question\",\n            expected: \"Example Answer\",\n            options: Array(newNum).fill(\"Example Answer\")\n        });\n    };\n\n    /*const switchMulti = () => {\n        b(0);\n        editQuestion(question.id, {\n            ...question,\n            type: \"multiple_choice_question\",\n            expected: \"Example Answer\",\n            options: Array(3).fill(\"Example Answer\")\n        });\n    };*/\n\n    const handlePoints = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \tquestion.points = parseInt(e.target.value)\n        editQuestion(question.id, question);\n    };\n\n    const handleChoiceChange = (\n        e: React.ChangeEvent<HTMLInputElement>,\n        i: number\n    ) => {\n        const newOptions = [...question.options];\n        newOptions.splice(i, 1, e.target.value);\n        editQuestion(question.id, {\n            ...question,\n            options: newOptions,\n            expected: a === i ? e.target.value : question.expected\n        });\n    };\n\n    const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const idx = parseInt(e.target.value);\n        b(idx);\n        editQuestion(question.id, {\n            ...question,\n            expected: question.options[idx]\n        });\n    };\n\n    function handleSwitch(event: ChangeEvent<HTMLSelectElement>): void {\n        throw new Error(\"Function not implemented.\");\n    }\n\n    return (\n        <>\n            <hr />\n            <div className=\"edit_question\">\n                <div className=\"edit_title_row\">\n                    <div className=\"edit_title_box\">\n                        <h4>{index + 1}. </h4>\n                        <Form.Group\n                            className=\"title_input\"\n                            controlId=\"editTitleFormId\"\n                        >\n                            <Form.Control\n                                value={question.body}\n                                data-testid=\"edit_question_title\"\n                                onChange={(\n                                    e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                    editQuestion(question.id, {\n                                        ...question,\n                                        body: e.target.value\n                                    });\n                                }}\n                            ></Form.Control>\n                        </Form.Group>\n                    </div>\n                    <div className=\"edit_title_box\">\n                        <Form.Group\n                            className=\"points_input\"\n                            controlId=\"editPointsFormId\"\n                        >\n                            <Form.Control\n                                value={question.points}\n                                type=\"number\"\n                                onChange={handlePoints}\n                            ></Form.Control>\n                        </Form.Group>\n                        <h4>pt{question.points !== 1 ? \"s\" : \"\"}</h4>\n                    </div>\n                </div>\n                <div className=\"center_section\">\n                    <div className=\"edit_answer_box\">\n                        <div className=\"type_form\">\n                            <Form.Group controlId=\"questionTypeFormId\">\n                                <Form.Label>Type: </Form.Label>\n                                <Form.Select\n                                    className=\"type_dropdown\"\n                                    value={question.type}\n                                    onChange={handleSwitch}\n                                >\n                                    <option\n                                        data-testid={\n                                            \"question_type_dropdown_\" + index\n                                        }\n                                        value=\"multiple_choice_question\"\n                                    >\n                                        Multiple Choice\n                                    </option>\n                                    <option\n                                        data-testid={\n                                            \"question_type_dropdown_\" + index\n                                        }\n                                        value=\"short_answer_question\"\n                                    >\n                                        Short Answer\n                                    </option>\n                                </Form.Select>\n                            </Form.Group>\n                            {question.type === \"multiple_choice_question\" && (\n                                <>\n                                    <Form.Group controlId=\"editNumChoicesId\">\n                                        <Form.Label>Choices: </Form.Label>\n                                        <Form.Control\n                                            className=\"num_choices\"\n                                            value={question.options.length}\n                                            type=\"number\"\n                                            onChange={handleNumOptions}\n                                        ></Form.Control>\n                                    </Form.Group>\n                                </>\n                            )}\n                        </div>\n                        <div>\n                            {question.type === \"short_answer_question\" && (\n                                <Form.Group controlId=\"formEditShortExpectedBox\">\n                                    <Form.Label>Answer:</Form.Label>\n                                    <Form.Control\n                                        value={question.expected}\n                                        onChange={(\n                                            e: React.ChangeEvent<HTMLInputElement>\n                                        ) => {\n                                            editQuestion(question.id, {\n                                                ...question,\n                                                expected: e.target.value\n                                            });\n                                        }}\n                                    ></Form.Control>\n                                </Form.Group>\n                            )}\n                            {question.type === \"multiple_choice_question\" && (\n                                <Form.Group controlId=\"formEditMultipleExpectedBox\">\n                                    <Form.Label>Answer:</Form.Label>\n                                    {question.options.map(\n                                        (option: string, i: number) => (\n                                            <div\n                                                key={i}\n                                                className=\"radio_question_box\"\n                                            >\n                                                <Form.Check\n                                                    type=\"radio\"\n                                                    name={\n                                                        \"questionChoice\" + index\n                                                    }\n                                                    value={i}\n                                                    checked={a === i}\n                                                    onChange={handleRadioChange}\n                                                />\n                                                <Form.Control\n                                                    name={\n                                                        \"questionChoice\" + index\n                                                    }\n                                                    value={option}\n                                                    onChange={(\n                                                        e: React.ChangeEvent<HTMLInputElement>\n                                                    ) => {\n                                                        handleChoiceChange(\n                                                            e,\n                                                            i\n                                                        );\n                                                    }}\n                                                ></Form.Control>\n                                            </div>\n                                        )\n                                    )}\n                                </Form.Group>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"swap_button_container\">\n                        <Button\n                            disabled={index === 0}\n                            className=\"swap_button\"\n                            onClick={() => {\n                                swapQuestion(index, index - 1);\n                            }}\n                        >\n                            ▲\n                        </Button>\n                        <Button\n                            disabled={index === lastIndex}\n                            className=\"swap_button\"\n                            onClick={() => {\n                                swapQuestion(index, index + 1);\n                            }}\n                        >\n                            ▼\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"edit_question_footer\">\n                    <Form.Check\n                        className=\"published_question_check\"\n                        data-testid=\"question_published_check\"\n                        type=\"checkbox\"\n                        id=\"is_question_published_check\"\n                        label=\"Published\"\n                        checked={question.published}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                            editQuestion(question.id, {\n                                ...question,\n                                published: e.target.checked\n                            });\n                        }}\n                    ></Form.Check>\n                    <Button\n                        variant=\"danger\"\n                        onClick={() => {\n                            removeQuestion(question.id);\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}