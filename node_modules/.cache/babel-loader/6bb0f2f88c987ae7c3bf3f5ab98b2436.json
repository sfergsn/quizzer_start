{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/form-components/CheckAnswer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CheckAnswer(_ref) {\n  _s();\n\n  let {\n    expectedAnswer\n  } = _ref;\n  const [Answer, setAnswer] = useState(\"\");\n\n  function updateAnswer(event) {\n    setAnswer(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formAnswer\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: Answer,\n        onChange: updateAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: Answer === expectedAnswer ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2714\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckAnswer, \"STuXgwTG5p1UfDDDprTk5gYp+QM=\");\n\n_c = CheckAnswer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckAnswer\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/form-components/CheckAnswer.tsx"],"names":["React","useState","Form","CheckAnswer","expectedAnswer","Answer","setAnswer","updateAnswer","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,OAAO,SAASC,WAAT,OAIS;AAAA;;AAAA,MAJY;AACxBC,IAAAA;AADwB,GAIZ;AACZ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,EAAT,CAApC;;AAEA,WAASM,YAAT,CAAsBC,KAAtB,EAAkE;AAC9DF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAEL,MAArB;AAA6B,QAAA,QAAQ,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBACKF,MAAM,KAAKD,cAAX,gBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADnD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAtBeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport function CheckAnswer({\n    expectedAnswer\n}: {\n    expectedAnswer: string;\n}): JSX.Element {\n    const [Answer, setAnswer] = useState<string>(\"\");\n\n    function updateAnswer(event: React.ChangeEvent<HTMLInputElement>) {\n        setAnswer(event.target.value);\n    }\n\n    return (\n        <div>\n            <Form.Group controlId=\"formAnswer\">\n                <Form.Label>Answer:</Form.Label>\n                <Form.Control value={Answer} onChange={updateAnswer} />\n            </Form.Group>\n            <h3>\n                {Answer === expectedAnswer ? <span>✔️</span> : <span>❌</span>}\n            </h3>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}