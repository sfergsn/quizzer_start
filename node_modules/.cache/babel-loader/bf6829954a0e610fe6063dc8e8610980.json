{"ast":null,"code":"var _jsxFileName = \"/Users/sferg/tasks/src/form-components/ChangeColor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"red\", \"blue\", \"green\", \"orange\", \"purple\", \"cyan\", \"magenta\", \"white\"];\nexport function ChangeColor() {\n  _s();\n\n  const [colorChoice, setColorChoice] = useState(\"\");\n\n  function updateColor(event) {\n    setColorChoice(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [COLORS.map(colorValue => /*#__PURE__*/_jsxDEV(Form.Check, {\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"radio\",\n        name: \"colors\",\n        onChange: updateColor,\n        id: \"color-check\" + colorValue,\n        label: colorValue,\n        style: {\n          backgroundColor: colorChoice\n        },\n        value: colorValue,\n        checked: colorChoice === colorValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, colorValue, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"You have chosen \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: colorChoice\n        },\n        \"data-testid\": \"colored-box\",\n        children: colorChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChangeColor, \"sRF19LnyC8o/foFc+AzujUQeOBQ=\");\n\n_c = ChangeColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeColor\");","map":{"version":3,"sources":["/Users/sferg/tasks/src/form-components/ChangeColor.tsx"],"names":["React","useState","Form","COLORS","ChangeColor","colorChoice","setColorChoice","updateColor","event","target","value","map","colorValue","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,MAAMC,MAAM,GAAG,CACX,KADW,EAEX,MAFW,EAGX,OAHW,EAIX,QAJW,EAKX,QALW,EAMX,MANW,EAOX,SAPW,EAQX,OARW,CAAf;AAWA,OAAO,SAASC,WAAT,GAAoC;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAS,EAAT,CAA9C;;AACA,WAASM,WAAT,CAAqBC,KAArB,EAAiE;AAC7DF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH;;AACD,sBACI;AAAA,eACKP,MAAM,CAACQ,GAAP,CAAYC,UAAD,iBACR,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,QAAQ,EAAEL,WAHd;AAII,QAAA,EAAE,EAAE,gBAAgBK,UAJxB;AAKI,QAAA,KAAK,EAAEA,UALX;AAMI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAER;AAAnB,SANX;AAOI,QAAA,KAAK,EAAEO,UAPX;AAQI,QAAA,OAAO,EAAEP,WAAW,KAAKO;AAR7B;AAAA;AAAA;AAAA;AAAA;AADJ,OAAiBA,UAAjB;AAAA;AAAA;AAAA;AAAA,YADH,CADL,eAeI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAER;AAAnB,SADX;AAEI,uBAAY,aAFhB;AAAA,kBAIKA;AAJL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAjCeD,W;;KAAAA,W","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nconst COLORS = [\n    \"red\",\n    \"blue\",\n    \"green\",\n    \"orange\",\n    \"purple\",\n    \"cyan\",\n    \"magenta\",\n    \"white\"\n];\n\nexport function ChangeColor(): JSX.Element {\n    const [colorChoice, setColorChoice] = useState<string>(\"\");\n    function updateColor(event: React.ChangeEvent<HTMLInputElement>) {\n        setColorChoice(event.target.value);\n    }\n    return (\n        <div>\n            {COLORS.map((colorValue: string) => (\n                <Form.Check key={colorValue}>\n                    <Form.Check\n                        type=\"radio\"\n                        name=\"colors\"\n                        onChange={updateColor}\n                        id={\"color-check\" + colorValue}\n                        label={colorValue}\n                        style={{ backgroundColor: colorChoice }}\n                        value={colorValue}\n                        checked={colorChoice === colorValue}\n                    />\n                </Form.Check>\n            ))}\n            <p>\n                <span>You have chosen </span>\n                <span\n                    style={{ backgroundColor: colorChoice }}\n                    data-testid=\"colored-box\"\n                >\n                    {colorChoice}\n                </span>\n                ;\n            </p>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}